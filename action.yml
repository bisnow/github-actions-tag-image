---
name: Tag docker image with input
description: Action to tag an image in a Docker registry with a given tag

inputs:
  registry: 
    description: 'The registry to tag the image in'
    required: true
  dst-registry: 
    description: 'The registry to copy the image to from the registry input'
    required: false
  aws-account:
    description: 'The AWS account to assume role for'
    required: true
  dst-aws-account:
    description: 'The Destination AWS account (use if different from source account)'
    required: false
  region:
    default: 'us-east-1'
    description: 'The AWS region'
  tag:
    description: 'The tag to use for the image'
    required: false
  sha:
    description: 'The git sha to tag the image with'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Assume CD/CI role for AWS account
      uses: bisnow/github-actions-assume-role-for-environment@main
      with:
        aws-account: ${{ inputs.aws-account }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Pull docker image
      shell: bash
      run: |
        docker pull --platform=linux/arm64 ${{ inputs.registry }}:${{ inputs.sha }}
    - name: Assume CD/CI role for destination AWS account
      if: ${{ inputs.dst-aws-account }}
      uses: bisnow/github-actions-assume-role-for-environment@main
      with:
        aws-account: ${{ inputs.dst-aws-account }}
    - name: Log into Destination ECR if needed
      if: ${{ inputs.dst-registry }}
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry: ${{ inputs.dst-registry }}
    - name: Tag destination image with git sha if destination account is set
      if: ${{ inputs.dst-aws-account }}
      shell: bash
      run: |
        docker buildx imagetools create -t ${{ inputs.dst-registry }}:${{ inputs.sha }} ${{ inputs.registry }}:${{ inputs.sha }}
    - name: Tag image with tag
      if: ${{ inputs.tag }}
      shell: bash
      run: |
        docker buildx imagetools create -t ${{ inputs.dst-registry || inputs.registry }}:${{ inputs.tag }} ${{ inputs.registry }}:${{ inputs.sha }}
